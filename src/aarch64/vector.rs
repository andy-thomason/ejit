//! This file has been generated by make_vector.rs DO NOT EDIT
//! Update asm/vector.c instead
//! 
use crate::{Cond, Error, Executable, Ins, Type, Vsize, R, V};
use super::{vgen2, vgen3, vgenmem};

pub fn gen_vector_aarch64(code: &mut Vec<u8>, i: Ins) -> Result<(), Error> {
    use Type::*;
    use Vsize::*;
    use Ins::*;
    match i {
        Vnot(S8, V64, dest, src) => vgen2(code, 0x2e205800-0, dest, src, &i), //      718:	2e205800 	mvn	v0.8b, v0.8b
        Vnot(U8, V64, dest, src) => vgen2(code, 0x2e205800-0, dest, src, &i), //      720:	2e205800 	mvn	v0.8b, v0.8b
        Vnot(S16, V64, dest, src) => vgen2(code, 0x2e205800-0, dest, src, &i), //      728:	2e205800 	mvn	v0.8b, v0.8b
        Vnot(U16, V64, dest, src) => vgen2(code, 0x2e205800-0, dest, src, &i), //      730:	2e205800 	mvn	v0.8b, v0.8b
        Vnot(S32, V64, dest, src) => vgen2(code, 0x2e205800-0, dest, src, &i), //      738:	2e205800 	mvn	v0.8b, v0.8b
        Vnot(U32, V64, dest, src) => vgen2(code, 0x2e205800-0, dest, src, &i), //      740:	2e205800 	mvn	v0.8b, v0.8b
        Vnot(S64, V64, dest, src) => vgen2(code, 0x2e205800-0, dest, src, &i), //      748:	2e205800 	mvn	v0.8b, v0.8b
        Vnot(U64, V64, dest, src) => vgen2(code, 0x2e205800-0, dest, src, &i), //      750:	2e205800 	mvn	v0.8b, v0.8b
        Vnot(S8, V128, dest, src) => vgen2(code, 0x6e205800-0, dest, src, &i), //      758:	6e205800 	mvn	v0.16b, v0.16b
        Vnot(U8, V128, dest, src) => vgen2(code, 0x6e205800-0, dest, src, &i), //      760:	6e205800 	mvn	v0.16b, v0.16b
        Vnot(S16, V128, dest, src) => vgen2(code, 0x6e205800-0, dest, src, &i), //      768:	6e205800 	mvn	v0.16b, v0.16b
        Vnot(U16, V128, dest, src) => vgen2(code, 0x6e205800-0, dest, src, &i), //      770:	6e205800 	mvn	v0.16b, v0.16b
        Vnot(S32, V128, dest, src) => vgen2(code, 0x6e205800-0, dest, src, &i), //      778:	6e205800 	mvn	v0.16b, v0.16b
        Vnot(U32, V128, dest, src) => vgen2(code, 0x6e205800-0, dest, src, &i), //      780:	6e205800 	mvn	v0.16b, v0.16b
        Vnot(S64, V128, dest, src) => vgen2(code, 0x6e205800-0, dest, src, &i), //      788:	6e205800 	mvn	v0.16b, v0.16b
        Vnot(U64, V128, dest, src) => vgen2(code, 0x6e205800-0, dest, src, &i), //      790:	6e205800 	mvn	v0.16b, v0.16b
        Vneg(F32, V32, dest, src) => vgen2(code, 0x1e214000-0, dest, src, &i), //      798:	1e214000 	fneg	s0, s0
        Vneg(S8, V64, dest, src) => vgen2(code, 0x2e20b800-0, dest, src, &i), //      7a0:	2e20b800 	neg	v0.8b, v0.8b
        Vneg(U8, V64, dest, src) => vgen2(code, 0x2e20b800-0, dest, src, &i), //      7a8:	2e20b800 	neg	v0.8b, v0.8b
        Vneg(S16, V64, dest, src) => vgen2(code, 0x2e60b800-0, dest, src, &i), //      7b0:	2e60b800 	neg	v0.4h, v0.4h
        Vneg(U16, V64, dest, src) => vgen2(code, 0x2e60b800-0, dest, src, &i), //      7b8:	2e60b800 	neg	v0.4h, v0.4h
        Vneg(S32, V64, dest, src) => vgen2(code, 0x2ea0b800-0, dest, src, &i), //      7c0:	2ea0b800 	neg	v0.2s, v0.2s
        Vneg(U32, V64, dest, src) => vgen2(code, 0x2ea0b800-0, dest, src, &i), //      7c8:	2ea0b800 	neg	v0.2s, v0.2s
        Vneg(S64, V64, dest, src) => vgen2(code, 0x7ee0b800-0, dest, src, &i), //      7d0:	7ee0b800 	neg	d0, d0
        Vneg(U64, V64, dest, src) => vgen2(code, 0x7ee0b800-0, dest, src, &i), //      7d8:	7ee0b800 	neg	d0, d0
        Vneg(F32, V64, dest, src) => vgen2(code, 0x2ea0f800-0, dest, src, &i), //      7e0:	2ea0f800 	fneg	v0.2s, v0.2s
        Vneg(F64, V64, dest, src) => vgen2(code, 0x1e614000-0, dest, src, &i), //      7e8:	1e614000 	fneg	d0, d0
        Vneg(S8, V128, dest, src) => vgen2(code, 0x6e20b800-0, dest, src, &i), //      7f0:	6e20b800 	neg	v0.16b, v0.16b
        Vneg(U8, V128, dest, src) => vgen2(code, 0x6e20b800-0, dest, src, &i), //      7f8:	6e20b800 	neg	v0.16b, v0.16b
        Vneg(S16, V128, dest, src) => vgen2(code, 0x6e60b800-0, dest, src, &i), //      800:	6e60b800 	neg	v0.8h, v0.8h
        Vneg(U16, V128, dest, src) => vgen2(code, 0x6e60b800-0, dest, src, &i), //      808:	6e60b800 	neg	v0.8h, v0.8h
        Vneg(S32, V128, dest, src) => vgen2(code, 0x6ea0b800-0, dest, src, &i), //      810:	6ea0b800 	neg	v0.4s, v0.4s
        Vneg(U32, V128, dest, src) => vgen2(code, 0x6ea0b800-0, dest, src, &i), //      818:	6ea0b800 	neg	v0.4s, v0.4s
        Vneg(S64, V128, dest, src) => vgen2(code, 0x6ee0b800-0, dest, src, &i), //      820:	6ee0b800 	neg	v0.2d, v0.2d
        Vneg(U64, V128, dest, src) => vgen2(code, 0x6ee0b800-0, dest, src, &i), //      828:	6ee0b800 	neg	v0.2d, v0.2d
        Vneg(F32, V128, dest, src) => vgen2(code, 0x6ea0f800-0, dest, src, &i), //      830:	6ea0f800 	fneg	v0.4s, v0.4s
        Vneg(F64, V128, dest, src) => vgen2(code, 0x6ee0f800-0, dest, src, &i), //      838:	6ee0f800 	fneg	v0.2d, v0.2d
        Vmov(F32, V32, dest, src) => vgen2(code, 0x1e204020-0x10000, dest, src, &i), //      840:	1e204020 	fmov	s0, s1
        Vmov(S8, V64, dest, src) => vgen2(code, 0x0ea11c20-0x10000, dest, src, &i), //      848:	0ea11c20 	mov	v0.8b, v1.8b
        Vmov(U8, V64, dest, src) => vgen2(code, 0x0ea11c20-0x10000, dest, src, &i), //      850:	0ea11c20 	mov	v0.8b, v1.8b
        Vmov(S16, V64, dest, src) => vgen2(code, 0x0ea11c20-0x10000, dest, src, &i), //      858:	0ea11c20 	mov	v0.8b, v1.8b
        Vmov(U16, V64, dest, src) => vgen2(code, 0x0ea11c20-0x10000, dest, src, &i), //      860:	0ea11c20 	mov	v0.8b, v1.8b
        Vmov(S32, V64, dest, src) => vgen2(code, 0x0ea11c20-0x10000, dest, src, &i), //      868:	0ea11c20 	mov	v0.8b, v1.8b
        Vmov(U32, V64, dest, src) => vgen2(code, 0x0ea11c20-0x10000, dest, src, &i), //      870:	0ea11c20 	mov	v0.8b, v1.8b
        Vmov(S64, V64, dest, src) => vgen2(code, 0x1e604020-0x10000, dest, src, &i), //      878:	1e604020 	fmov	d0, d1
        Vmov(U64, V64, dest, src) => vgen2(code, 0x1e604020-0x10000, dest, src, &i), //      880:	1e604020 	fmov	d0, d1
        Vmov(F32, V64, dest, src) => vgen2(code, 0x0ea11c20-0x10000, dest, src, &i), //      888:	0ea11c20 	mov	v0.8b, v1.8b
        Vmov(F64, V64, dest, src) => vgen2(code, 0x1e604020-0x10000, dest, src, &i), //      890:	1e604020 	fmov	d0, d1
        Vmov(S8, V128, dest, src) => vgen2(code, 0x4ea11c20-0x10000, dest, src, &i), //      898:	4ea11c20 	mov	v0.16b, v1.16b
        Vmov(U8, V128, dest, src) => vgen2(code, 0x4ea11c20-0x10000, dest, src, &i), //      8a0:	4ea11c20 	mov	v0.16b, v1.16b
        Vmov(S16, V128, dest, src) => vgen2(code, 0x4ea11c20-0x10000, dest, src, &i), //      8a8:	4ea11c20 	mov	v0.16b, v1.16b
        Vmov(U16, V128, dest, src) => vgen2(code, 0x4ea11c20-0x10000, dest, src, &i), //      8b0:	4ea11c20 	mov	v0.16b, v1.16b
        Vmov(S32, V128, dest, src) => vgen2(code, 0x4ea11c20-0x10000, dest, src, &i), //      8b8:	4ea11c20 	mov	v0.16b, v1.16b
        Vmov(U32, V128, dest, src) => vgen2(code, 0x4ea11c20-0x10000, dest, src, &i), //      8c0:	4ea11c20 	mov	v0.16b, v1.16b
        Vmov(S64, V128, dest, src) => vgen2(code, 0x4ea11c20-0x10000, dest, src, &i), //      8c8:	4ea11c20 	mov	v0.16b, v1.16b
        Vmov(U64, V128, dest, src) => vgen2(code, 0x4ea11c20-0x10000, dest, src, &i), //      8d0:	4ea11c20 	mov	v0.16b, v1.16b
        Vmov(F32, V128, dest, src) => vgen2(code, 0x4ea11c20-0x10000, dest, src, &i), //      8d8:	4ea11c20 	mov	v0.16b, v1.16b
        Vmov(F64, V128, dest, src) => vgen2(code, 0x4ea11c20-0x10000, dest, src, &i), //      8e0:	4ea11c20 	mov	v0.16b, v1.16b
        Vadd(F32, V32, dest, src1, src2) => vgen3(code, 0x1e212800-0x10000, dest, src1, src2, &i), //      8e8:	1e212800 	fadd	s0, s0, s1
        Vadd(S8, V64, dest, src1, src2) => vgen3(code, 0x0e218400-0x10000, dest, src1, src2, &i), //      8f0:	0e218400 	add	v0.8b, v0.8b, v1.8b
        Vadd(U8, V64, dest, src1, src2) => vgen3(code, 0x0e218400-0x10000, dest, src1, src2, &i), //      8f8:	0e218400 	add	v0.8b, v0.8b, v1.8b
        Vadd(S16, V64, dest, src1, src2) => vgen3(code, 0x0e618400-0x10000, dest, src1, src2, &i), //      900:	0e618400 	add	v0.4h, v0.4h, v1.4h
        Vadd(U16, V64, dest, src1, src2) => vgen3(code, 0x0e618400-0x10000, dest, src1, src2, &i), //      908:	0e618400 	add	v0.4h, v0.4h, v1.4h
        Vadd(S32, V64, dest, src1, src2) => vgen3(code, 0x0ea18400-0x10000, dest, src1, src2, &i), //      910:	0ea18400 	add	v0.2s, v0.2s, v1.2s
        Vadd(U32, V64, dest, src1, src2) => vgen3(code, 0x0ea18400-0x10000, dest, src1, src2, &i), //      918:	0ea18400 	add	v0.2s, v0.2s, v1.2s
        Vadd(S64, V64, dest, src1, src2) => vgen3(code, 0x5ee18400-0x10000, dest, src1, src2, &i), //      920:	5ee18400 	add	d0, d0, d1
        Vadd(U64, V64, dest, src1, src2) => vgen3(code, 0x5ee18400-0x10000, dest, src1, src2, &i), //      928:	5ee18400 	add	d0, d0, d1
        Vadd(F32, V64, dest, src1, src2) => vgen3(code, 0x0e21d400-0x10000, dest, src1, src2, &i), //      930:	0e21d400 	fadd	v0.2s, v0.2s, v1.2s
        Vadd(F64, V64, dest, src1, src2) => vgen3(code, 0x1e612800-0x10000, dest, src1, src2, &i), //      938:	1e612800 	fadd	d0, d0, d1
        Vadd(S8, V128, dest, src1, src2) => vgen3(code, 0x4e218400-0x10000, dest, src1, src2, &i), //      940:	4e218400 	add	v0.16b, v0.16b, v1.16b
        Vadd(U8, V128, dest, src1, src2) => vgen3(code, 0x4e218400-0x10000, dest, src1, src2, &i), //      948:	4e218400 	add	v0.16b, v0.16b, v1.16b
        Vadd(S16, V128, dest, src1, src2) => vgen3(code, 0x4e618400-0x10000, dest, src1, src2, &i), //      950:	4e618400 	add	v0.8h, v0.8h, v1.8h
        Vadd(U16, V128, dest, src1, src2) => vgen3(code, 0x4e618400-0x10000, dest, src1, src2, &i), //      958:	4e618400 	add	v0.8h, v0.8h, v1.8h
        Vadd(S32, V128, dest, src1, src2) => vgen3(code, 0x4ea18400-0x10000, dest, src1, src2, &i), //      960:	4ea18400 	add	v0.4s, v0.4s, v1.4s
        Vadd(U32, V128, dest, src1, src2) => vgen3(code, 0x4ea18400-0x10000, dest, src1, src2, &i), //      968:	4ea18400 	add	v0.4s, v0.4s, v1.4s
        Vadd(S64, V128, dest, src1, src2) => vgen3(code, 0x4ee18400-0x10000, dest, src1, src2, &i), //      970:	4ee18400 	add	v0.2d, v0.2d, v1.2d
        Vadd(U64, V128, dest, src1, src2) => vgen3(code, 0x4ee18400-0x10000, dest, src1, src2, &i), //      978:	4ee18400 	add	v0.2d, v0.2d, v1.2d
        Vadd(F32, V128, dest, src1, src2) => vgen3(code, 0x4e21d400-0x10000, dest, src1, src2, &i), //      980:	4e21d400 	fadd	v0.4s, v0.4s, v1.4s
        Vadd(F64, V128, dest, src1, src2) => vgen3(code, 0x4e61d400-0x10000, dest, src1, src2, &i), //      988:	4e61d400 	fadd	v0.2d, v0.2d, v1.2d
        Vsub(F32, V32, dest, src1, src2) => vgen3(code, 0x1e213800-0x10000, dest, src1, src2, &i), //      990:	1e213800 	fsub	s0, s0, s1
        Vsub(S8, V64, dest, src1, src2) => vgen3(code, 0x2e218400-0x10000, dest, src1, src2, &i), //      998:	2e218400 	sub	v0.8b, v0.8b, v1.8b
        Vsub(U8, V64, dest, src1, src2) => vgen3(code, 0x2e218400-0x10000, dest, src1, src2, &i), //      9a0:	2e218400 	sub	v0.8b, v0.8b, v1.8b
        Vsub(S16, V64, dest, src1, src2) => vgen3(code, 0x2e618400-0x10000, dest, src1, src2, &i), //      9a8:	2e618400 	sub	v0.4h, v0.4h, v1.4h
        Vsub(U16, V64, dest, src1, src2) => vgen3(code, 0x2e618400-0x10000, dest, src1, src2, &i), //      9b0:	2e618400 	sub	v0.4h, v0.4h, v1.4h
        Vsub(S32, V64, dest, src1, src2) => vgen3(code, 0x2ea18400-0x10000, dest, src1, src2, &i), //      9b8:	2ea18400 	sub	v0.2s, v0.2s, v1.2s
        Vsub(U32, V64, dest, src1, src2) => vgen3(code, 0x2ea18400-0x10000, dest, src1, src2, &i), //      9c0:	2ea18400 	sub	v0.2s, v0.2s, v1.2s
        Vsub(S64, V64, dest, src1, src2) => vgen3(code, 0x7ee18400-0x10000, dest, src1, src2, &i), //      9c8:	7ee18400 	sub	d0, d0, d1
        Vsub(U64, V64, dest, src1, src2) => vgen3(code, 0x7ee18400-0x10000, dest, src1, src2, &i), //      9d0:	7ee18400 	sub	d0, d0, d1
        Vsub(F32, V64, dest, src1, src2) => vgen3(code, 0x0ea1d400-0x10000, dest, src1, src2, &i), //      9d8:	0ea1d400 	fsub	v0.2s, v0.2s, v1.2s
        Vsub(F64, V64, dest, src1, src2) => vgen3(code, 0x1e613800-0x10000, dest, src1, src2, &i), //      9e0:	1e613800 	fsub	d0, d0, d1
        Vsub(S8, V128, dest, src1, src2) => vgen3(code, 0x6e218400-0x10000, dest, src1, src2, &i), //      9e8:	6e218400 	sub	v0.16b, v0.16b, v1.16b
        Vsub(U8, V128, dest, src1, src2) => vgen3(code, 0x6e218400-0x10000, dest, src1, src2, &i), //      9f0:	6e218400 	sub	v0.16b, v0.16b, v1.16b
        Vsub(S16, V128, dest, src1, src2) => vgen3(code, 0x6e618400-0x10000, dest, src1, src2, &i), //      9f8:	6e618400 	sub	v0.8h, v0.8h, v1.8h
        Vsub(U16, V128, dest, src1, src2) => vgen3(code, 0x6e618400-0x10000, dest, src1, src2, &i), //      a00:	6e618400 	sub	v0.8h, v0.8h, v1.8h
        Vsub(S32, V128, dest, src1, src2) => vgen3(code, 0x6ea18400-0x10000, dest, src1, src2, &i), //      a08:	6ea18400 	sub	v0.4s, v0.4s, v1.4s
        Vsub(U32, V128, dest, src1, src2) => vgen3(code, 0x6ea18400-0x10000, dest, src1, src2, &i), //      a10:	6ea18400 	sub	v0.4s, v0.4s, v1.4s
        Vsub(S64, V128, dest, src1, src2) => vgen3(code, 0x6ee18400-0x10000, dest, src1, src2, &i), //      a18:	6ee18400 	sub	v0.2d, v0.2d, v1.2d
        Vsub(U64, V128, dest, src1, src2) => vgen3(code, 0x6ee18400-0x10000, dest, src1, src2, &i), //      a20:	6ee18400 	sub	v0.2d, v0.2d, v1.2d
        Vsub(F32, V128, dest, src1, src2) => vgen3(code, 0x4ea1d400-0x10000, dest, src1, src2, &i), //      a28:	4ea1d400 	fsub	v0.4s, v0.4s, v1.4s
        Vsub(F64, V128, dest, src1, src2) => vgen3(code, 0x4ee1d400-0x10000, dest, src1, src2, &i), //      a30:	4ee1d400 	fsub	v0.2d, v0.2d, v1.2d
        Vmul(F32, V32, dest, src1, src2) => vgen3(code, 0x1e210800-0x10000, dest, src1, src2, &i), //      a38:	1e210800 	fmul	s0, s0, s1
        Vmul(S8, V64, dest, src1, src2) => vgen3(code, 0x0e219c00-0x10000, dest, src1, src2, &i), //      a40:	0e219c00 	mul	v0.8b, v0.8b, v1.8b
        Vmul(U8, V64, dest, src1, src2) => vgen3(code, 0x0e219c00-0x10000, dest, src1, src2, &i), //      a48:	0e219c00 	mul	v0.8b, v0.8b, v1.8b
        Vmul(S16, V64, dest, src1, src2) => vgen3(code, 0x0e619c00-0x10000, dest, src1, src2, &i), //      a50:	0e619c00 	mul	v0.4h, v0.4h, v1.4h
        Vmul(U16, V64, dest, src1, src2) => vgen3(code, 0x0e619c00-0x10000, dest, src1, src2, &i), //      a58:	0e619c00 	mul	v0.4h, v0.4h, v1.4h
        Vmul(S32, V64, dest, src1, src2) => vgen3(code, 0x0ea19c00-0x10000, dest, src1, src2, &i), //      a60:	0ea19c00 	mul	v0.2s, v0.2s, v1.2s
        Vmul(U32, V64, dest, src1, src2) => vgen3(code, 0x0ea19c00-0x10000, dest, src1, src2, &i), //      a68:	0ea19c00 	mul	v0.2s, v0.2s, v1.2s
        Vmul(F32, V64, dest, src1, src2) => vgen3(code, 0x2e21dc00-0x10000, dest, src1, src2, &i), //      a98:	2e21dc00 	fmul	v0.2s, v0.2s, v1.2s
        Vmul(F64, V64, dest, src1, src2) => vgen3(code, 0x1e610800-0x10000, dest, src1, src2, &i), //      aa0:	1e610800 	fmul	d0, d0, d1
        Vmul(S8, V128, dest, src1, src2) => vgen3(code, 0x4e219c00-0x10000, dest, src1, src2, &i), //      aa8:	4e219c00 	mul	v0.16b, v0.16b, v1.16b
        Vmul(U8, V128, dest, src1, src2) => vgen3(code, 0x4e219c00-0x10000, dest, src1, src2, &i), //      ab0:	4e219c00 	mul	v0.16b, v0.16b, v1.16b
        Vmul(S16, V128, dest, src1, src2) => vgen3(code, 0x4e619c00-0x10000, dest, src1, src2, &i), //      ab8:	4e619c00 	mul	v0.8h, v0.8h, v1.8h
        Vmul(U16, V128, dest, src1, src2) => vgen3(code, 0x4e619c00-0x10000, dest, src1, src2, &i), //      ac0:	4e619c00 	mul	v0.8h, v0.8h, v1.8h
        Vmul(S32, V128, dest, src1, src2) => vgen3(code, 0x4ea19c00-0x10000, dest, src1, src2, &i), //      ac8:	4ea19c00 	mul	v0.4s, v0.4s, v1.4s
        Vmul(U32, V128, dest, src1, src2) => vgen3(code, 0x4ea19c00-0x10000, dest, src1, src2, &i), //      ad0:	4ea19c00 	mul	v0.4s, v0.4s, v1.4s
        Vmul(F32, V128, dest, src1, src2) => vgen3(code, 0x6e21dc00-0x10000, dest, src1, src2, &i), //      b20:	6e21dc00 	fmul	v0.4s, v0.4s, v1.4s
        Vmul(F64, V128, dest, src1, src2) => vgen3(code, 0x6e61dc00-0x10000, dest, src1, src2, &i), //      b28:	6e61dc00 	fmul	v0.2d, v0.2d, v1.2d
        Vdiv(F32, V32, dest, src1, src2) => vgen3(code, 0x1e211800-0x10000, dest, src1, src2, &i), //      b30:	1e211800 	fdiv	s0, s0, s1
        Vdiv(F32, V64, dest, src1, src2) => vgen3(code, 0x2e21fc00-0x10000, dest, src1, src2, &i), //      d38:	2e21fc00 	fdiv	v0.2s, v0.2s, v1.2s
        Vdiv(F64, V64, dest, src1, src2) => vgen3(code, 0x1e611800-0x10000, dest, src1, src2, &i), //      d40:	1e611800 	fdiv	d0, d0, d1
        Vdiv(F32, V128, dest, src1, src2) => vgen3(code, 0x6e21fc00-0x10000, dest, src1, src2, &i), //     1140:	6e21fc00 	fdiv	v0.4s, v0.4s, v1.4s
        Vdiv(F64, V128, dest, src1, src2) => vgen3(code, 0x6e61fc00-0x10000, dest, src1, src2, &i), //     1148:	6e61fc00 	fdiv	v0.2d, v0.2d, v1.2d
        Vand(S8, V64, dest, src1, src2) => vgen3(code, 0x0e211c00-0x10000, dest, src1, src2, &i), //     1150:	0e211c00 	and	v0.8b, v0.8b, v1.8b
        Vand(U8, V64, dest, src1, src2) => vgen3(code, 0x0e211c00-0x10000, dest, src1, src2, &i), //     1158:	0e211c00 	and	v0.8b, v0.8b, v1.8b
        Vand(S16, V64, dest, src1, src2) => vgen3(code, 0x0e211c00-0x10000, dest, src1, src2, &i), //     1160:	0e211c00 	and	v0.8b, v0.8b, v1.8b
        Vand(U16, V64, dest, src1, src2) => vgen3(code, 0x0e211c00-0x10000, dest, src1, src2, &i), //     1168:	0e211c00 	and	v0.8b, v0.8b, v1.8b
        Vand(S32, V64, dest, src1, src2) => vgen3(code, 0x0e211c00-0x10000, dest, src1, src2, &i), //     1170:	0e211c00 	and	v0.8b, v0.8b, v1.8b
        Vand(U32, V64, dest, src1, src2) => vgen3(code, 0x0e211c00-0x10000, dest, src1, src2, &i), //     1178:	0e211c00 	and	v0.8b, v0.8b, v1.8b
        Vand(S64, V64, dest, src1, src2) => vgen3(code, 0x0e211c00-0x10000, dest, src1, src2, &i), //     1180:	0e211c00 	and	v0.8b, v0.8b, v1.8b
        Vand(U64, V64, dest, src1, src2) => vgen3(code, 0x0e211c00-0x10000, dest, src1, src2, &i), //     1188:	0e211c00 	and	v0.8b, v0.8b, v1.8b
        Vand(S8, V128, dest, src1, src2) => vgen3(code, 0x4e211c00-0x10000, dest, src1, src2, &i), //     1190:	4e211c00 	and	v0.16b, v0.16b, v1.16b
        Vand(U8, V128, dest, src1, src2) => vgen3(code, 0x4e211c00-0x10000, dest, src1, src2, &i), //     1198:	4e211c00 	and	v0.16b, v0.16b, v1.16b
        Vand(S16, V128, dest, src1, src2) => vgen3(code, 0x4e211c00-0x10000, dest, src1, src2, &i), //     11a0:	4e211c00 	and	v0.16b, v0.16b, v1.16b
        Vand(U16, V128, dest, src1, src2) => vgen3(code, 0x4e211c00-0x10000, dest, src1, src2, &i), //     11a8:	4e211c00 	and	v0.16b, v0.16b, v1.16b
        Vand(S32, V128, dest, src1, src2) => vgen3(code, 0x4e211c00-0x10000, dest, src1, src2, &i), //     11b0:	4e211c00 	and	v0.16b, v0.16b, v1.16b
        Vand(U32, V128, dest, src1, src2) => vgen3(code, 0x4e211c00-0x10000, dest, src1, src2, &i), //     11b8:	4e211c00 	and	v0.16b, v0.16b, v1.16b
        Vand(S64, V128, dest, src1, src2) => vgen3(code, 0x4e211c00-0x10000, dest, src1, src2, &i), //     11c0:	4e211c00 	and	v0.16b, v0.16b, v1.16b
        Vand(U64, V128, dest, src1, src2) => vgen3(code, 0x4e211c00-0x10000, dest, src1, src2, &i), //     11c8:	4e211c00 	and	v0.16b, v0.16b, v1.16b
        Vor(S8, V64, dest, src1, src2) => vgen3(code, 0x0ea11c00-0x10000, dest, src1, src2, &i), //     11d0:	0ea11c00 	orr	v0.8b, v0.8b, v1.8b
        Vor(U8, V64, dest, src1, src2) => vgen3(code, 0x0ea11c00-0x10000, dest, src1, src2, &i), //     11d8:	0ea11c00 	orr	v0.8b, v0.8b, v1.8b
        Vor(S16, V64, dest, src1, src2) => vgen3(code, 0x0ea11c00-0x10000, dest, src1, src2, &i), //     11e0:	0ea11c00 	orr	v0.8b, v0.8b, v1.8b
        Vor(U16, V64, dest, src1, src2) => vgen3(code, 0x0ea11c00-0x10000, dest, src1, src2, &i), //     11e8:	0ea11c00 	orr	v0.8b, v0.8b, v1.8b
        Vor(S32, V64, dest, src1, src2) => vgen3(code, 0x0ea11c00-0x10000, dest, src1, src2, &i), //     11f0:	0ea11c00 	orr	v0.8b, v0.8b, v1.8b
        Vor(U32, V64, dest, src1, src2) => vgen3(code, 0x0ea11c00-0x10000, dest, src1, src2, &i), //     11f8:	0ea11c00 	orr	v0.8b, v0.8b, v1.8b
        Vor(S64, V64, dest, src1, src2) => vgen3(code, 0x0ea11c00-0x10000, dest, src1, src2, &i), //     1200:	0ea11c00 	orr	v0.8b, v0.8b, v1.8b
        Vor(U64, V64, dest, src1, src2) => vgen3(code, 0x0ea11c00-0x10000, dest, src1, src2, &i), //     1208:	0ea11c00 	orr	v0.8b, v0.8b, v1.8b
        Vor(S8, V128, dest, src1, src2) => vgen3(code, 0x4ea11c00-0x10000, dest, src1, src2, &i), //     1210:	4ea11c00 	orr	v0.16b, v0.16b, v1.16b
        Vor(U8, V128, dest, src1, src2) => vgen3(code, 0x4ea11c00-0x10000, dest, src1, src2, &i), //     1218:	4ea11c00 	orr	v0.16b, v0.16b, v1.16b
        Vor(S16, V128, dest, src1, src2) => vgen3(code, 0x4ea11c00-0x10000, dest, src1, src2, &i), //     1220:	4ea11c00 	orr	v0.16b, v0.16b, v1.16b
        Vor(U16, V128, dest, src1, src2) => vgen3(code, 0x4ea11c00-0x10000, dest, src1, src2, &i), //     1228:	4ea11c00 	orr	v0.16b, v0.16b, v1.16b
        Vor(S32, V128, dest, src1, src2) => vgen3(code, 0x4ea11c00-0x10000, dest, src1, src2, &i), //     1230:	4ea11c00 	orr	v0.16b, v0.16b, v1.16b
        Vor(U32, V128, dest, src1, src2) => vgen3(code, 0x4ea11c00-0x10000, dest, src1, src2, &i), //     1238:	4ea11c00 	orr	v0.16b, v0.16b, v1.16b
        Vor(S64, V128, dest, src1, src2) => vgen3(code, 0x4ea11c00-0x10000, dest, src1, src2, &i), //     1240:	4ea11c00 	orr	v0.16b, v0.16b, v1.16b
        Vor(U64, V128, dest, src1, src2) => vgen3(code, 0x4ea11c00-0x10000, dest, src1, src2, &i), //     1248:	4ea11c00 	orr	v0.16b, v0.16b, v1.16b
        Vxor(S8, V64, dest, src1, src2) => vgen3(code, 0x2e211c00-0x10000, dest, src1, src2, &i), //     1250:	2e211c00 	eor	v0.8b, v0.8b, v1.8b
        Vxor(U8, V64, dest, src1, src2) => vgen3(code, 0x2e211c00-0x10000, dest, src1, src2, &i), //     1258:	2e211c00 	eor	v0.8b, v0.8b, v1.8b
        Vxor(S16, V64, dest, src1, src2) => vgen3(code, 0x2e211c00-0x10000, dest, src1, src2, &i), //     1260:	2e211c00 	eor	v0.8b, v0.8b, v1.8b
        Vxor(U16, V64, dest, src1, src2) => vgen3(code, 0x2e211c00-0x10000, dest, src1, src2, &i), //     1268:	2e211c00 	eor	v0.8b, v0.8b, v1.8b
        Vxor(S32, V64, dest, src1, src2) => vgen3(code, 0x2e211c00-0x10000, dest, src1, src2, &i), //     1270:	2e211c00 	eor	v0.8b, v0.8b, v1.8b
        Vxor(U32, V64, dest, src1, src2) => vgen3(code, 0x2e211c00-0x10000, dest, src1, src2, &i), //     1278:	2e211c00 	eor	v0.8b, v0.8b, v1.8b
        Vxor(S64, V64, dest, src1, src2) => vgen3(code, 0x2e211c00-0x10000, dest, src1, src2, &i), //     1280:	2e211c00 	eor	v0.8b, v0.8b, v1.8b
        Vxor(U64, V64, dest, src1, src2) => vgen3(code, 0x2e211c00-0x10000, dest, src1, src2, &i), //     1288:	2e211c00 	eor	v0.8b, v0.8b, v1.8b
        Vxor(S8, V128, dest, src1, src2) => vgen3(code, 0x6e211c00-0x10000, dest, src1, src2, &i), //     1290:	6e211c00 	eor	v0.16b, v0.16b, v1.16b
        Vxor(U8, V128, dest, src1, src2) => vgen3(code, 0x6e211c00-0x10000, dest, src1, src2, &i), //     1298:	6e211c00 	eor	v0.16b, v0.16b, v1.16b
        Vxor(S16, V128, dest, src1, src2) => vgen3(code, 0x6e211c00-0x10000, dest, src1, src2, &i), //     12a0:	6e211c00 	eor	v0.16b, v0.16b, v1.16b
        Vxor(U16, V128, dest, src1, src2) => vgen3(code, 0x6e211c00-0x10000, dest, src1, src2, &i), //     12a8:	6e211c00 	eor	v0.16b, v0.16b, v1.16b
        Vxor(S32, V128, dest, src1, src2) => vgen3(code, 0x6e211c00-0x10000, dest, src1, src2, &i), //     12b0:	6e211c00 	eor	v0.16b, v0.16b, v1.16b
        Vxor(U32, V128, dest, src1, src2) => vgen3(code, 0x6e211c00-0x10000, dest, src1, src2, &i), //     12b8:	6e211c00 	eor	v0.16b, v0.16b, v1.16b
        Vxor(S64, V128, dest, src1, src2) => vgen3(code, 0x6e211c00-0x10000, dest, src1, src2, &i), //     12c0:	6e211c00 	eor	v0.16b, v0.16b, v1.16b
        Vxor(U64, V128, dest, src1, src2) => vgen3(code, 0x6e211c00-0x10000, dest, src1, src2, &i), //     12c8:	6e211c00 	eor	v0.16b, v0.16b, v1.16b
        Vshl(S8, V64, dest, src1, src2) => vgen3(code, 0x0e214400-0x10000, dest, src1, src2, &i), //     12d0:	0e214400 	sshl	v0.8b, v0.8b, v1.8b
        Vshl(U8, V64, dest, src1, src2) => vgen3(code, 0x0e214400-0x10000, dest, src1, src2, &i), //     12d8:	0e214400 	sshl	v0.8b, v0.8b, v1.8b
        Vshl(S16, V64, dest, src1, src2) => vgen3(code, 0x0e614400-0x10000, dest, src1, src2, &i), //     12e0:	0e614400 	sshl	v0.4h, v0.4h, v1.4h
        Vshl(U16, V64, dest, src1, src2) => vgen3(code, 0x0e614400-0x10000, dest, src1, src2, &i), //     12e8:	0e614400 	sshl	v0.4h, v0.4h, v1.4h
        Vshl(S32, V64, dest, src1, src2) => vgen3(code, 0x0ea14400-0x10000, dest, src1, src2, &i), //     12f0:	0ea14400 	sshl	v0.2s, v0.2s, v1.2s
        Vshl(U32, V64, dest, src1, src2) => vgen3(code, 0x0ea14400-0x10000, dest, src1, src2, &i), //     12f8:	0ea14400 	sshl	v0.2s, v0.2s, v1.2s
        Vshl(S64, V64, dest, src1, src2) => vgen3(code, 0x7ee14400-0x10000, dest, src1, src2, &i), //     1300:	7ee14400 	ushl	d0, d0, d1
        Vshl(U64, V64, dest, src1, src2) => vgen3(code, 0x7ee14400-0x10000, dest, src1, src2, &i), //     1308:	7ee14400 	ushl	d0, d0, d1
        Vshl(S8, V128, dest, src1, src2) => vgen3(code, 0x4e214400-0x10000, dest, src1, src2, &i), //     1310:	4e214400 	sshl	v0.16b, v0.16b, v1.16b
        Vshl(U8, V128, dest, src1, src2) => vgen3(code, 0x4e214400-0x10000, dest, src1, src2, &i), //     1318:	4e214400 	sshl	v0.16b, v0.16b, v1.16b
        Vshl(S16, V128, dest, src1, src2) => vgen3(code, 0x4e614400-0x10000, dest, src1, src2, &i), //     1320:	4e614400 	sshl	v0.8h, v0.8h, v1.8h
        Vshl(U16, V128, dest, src1, src2) => vgen3(code, 0x4e614400-0x10000, dest, src1, src2, &i), //     1328:	4e614400 	sshl	v0.8h, v0.8h, v1.8h
        Vshl(S32, V128, dest, src1, src2) => vgen3(code, 0x4ea14400-0x10000, dest, src1, src2, &i), //     1330:	4ea14400 	sshl	v0.4s, v0.4s, v1.4s
        Vshl(U32, V128, dest, src1, src2) => vgen3(code, 0x4ea14400-0x10000, dest, src1, src2, &i), //     1338:	4ea14400 	sshl	v0.4s, v0.4s, v1.4s
        Vshl(S64, V128, dest, src1, src2) => vgen3(code, 0x4ee14400-0x10000, dest, src1, src2, &i), //     1340:	4ee14400 	sshl	v0.2d, v0.2d, v1.2d
        Vshl(U64, V128, dest, src1, src2) => vgen3(code, 0x4ee14400-0x10000, dest, src1, src2, &i), //     1348:	4ee14400 	sshl	v0.2d, v0.2d, v1.2d
        Vst(F32, V32, v, r, imm) => vgenmem(code, 0xbc001000-0, v, r, imm, &i), //     1350:	bc001000 	stur	s0, [x0, #1]
        Vst(S8, V64, v, r, imm) => vgenmem(code, 0xfc001000-0, v, r, imm, &i), //     1358:	fc001000 	stur	d0, [x0, #1]
        Vst(U8, V64, v, r, imm) => vgenmem(code, 0xfc001000-0, v, r, imm, &i), //     1360:	fc001000 	stur	d0, [x0, #1]
        Vst(S16, V64, v, r, imm) => vgenmem(code, 0xfc001000-0, v, r, imm, &i), //     1368:	fc001000 	stur	d0, [x0, #1]
        Vst(U16, V64, v, r, imm) => vgenmem(code, 0xfc001000-0, v, r, imm, &i), //     1370:	fc001000 	stur	d0, [x0, #1]
        Vst(S32, V64, v, r, imm) => vgenmem(code, 0xfc001000-0, v, r, imm, &i), //     1378:	fc001000 	stur	d0, [x0, #1]
        Vst(U32, V64, v, r, imm) => vgenmem(code, 0xfc001000-0, v, r, imm, &i), //     1380:	fc001000 	stur	d0, [x0, #1]
        Vst(S64, V64, v, r, imm) => vgenmem(code, 0xfc001000-0, v, r, imm, &i), //     1388:	fc001000 	stur	d0, [x0, #1]
        Vst(U64, V64, v, r, imm) => vgenmem(code, 0xfc001000-0, v, r, imm, &i), //     1390:	fc001000 	stur	d0, [x0, #1]
        Vst(F32, V64, v, r, imm) => vgenmem(code, 0xfc001000-0, v, r, imm, &i), //     1398:	fc001000 	stur	d0, [x0, #1]
        Vst(F64, V64, v, r, imm) => vgenmem(code, 0xfc001000-0, v, r, imm, &i), //     13a0:	fc001000 	stur	d0, [x0, #1]
        Vst(S8, V128, v, r, imm) => vgenmem(code, 0x3c801000-0, v, r, imm, &i), //     13a8:	3c801000 	stur	q0, [x0, #1]
        Vst(U8, V128, v, r, imm) => vgenmem(code, 0x3c801000-0, v, r, imm, &i), //     13b0:	3c801000 	stur	q0, [x0, #1]
        Vst(S16, V128, v, r, imm) => vgenmem(code, 0x3c801000-0, v, r, imm, &i), //     13b8:	3c801000 	stur	q0, [x0, #1]
        Vst(U16, V128, v, r, imm) => vgenmem(code, 0x3c801000-0, v, r, imm, &i), //     13c0:	3c801000 	stur	q0, [x0, #1]
        Vst(S32, V128, v, r, imm) => vgenmem(code, 0x3c801000-0, v, r, imm, &i), //     13c8:	3c801000 	stur	q0, [x0, #1]
        Vst(U32, V128, v, r, imm) => vgenmem(code, 0x3c801000-0, v, r, imm, &i), //     13d0:	3c801000 	stur	q0, [x0, #1]
        Vst(S64, V128, v, r, imm) => vgenmem(code, 0x3c801000-0, v, r, imm, &i), //     13d8:	3c801000 	stur	q0, [x0, #1]
        Vst(U64, V128, v, r, imm) => vgenmem(code, 0x3c801000-0, v, r, imm, &i), //     13e0:	3c801000 	stur	q0, [x0, #1]
        Vst(F32, V128, v, r, imm) => vgenmem(code, 0x3c801000-0, v, r, imm, &i), //     13e8:	3c801000 	stur	q0, [x0, #1]
        Vst(F64, V128, v, r, imm) => vgenmem(code, 0x3c801000-0, v, r, imm, &i), //     13f0:	3c801000 	stur	q0, [x0, #1]
        Vrecpe(F32, V32, dest, src) => vgen2(code, 0x5ea1d800-0, dest, src, &i), //     13f8:	5ea1d800 	frecpe	s0, s0
        Vrecpe(F64, V64, dest, src) => vgen2(code, 0x5ee1d800-0, dest, src, &i), //     1400:	5ee1d800 	frecpe	d0, d0
        Vrecpe(F32, V64, dest, src) => vgen2(code, 0x0ea1d800-0, dest, src, &i), //     1408:	0ea1d800 	frecpe	v0.2s, v0.2s
        Vrecpe(F32, V128, dest, src) => vgen2(code, 0x4ea1d800-0, dest, src, &i), //     1410:	4ea1d800 	frecpe	v0.4s, v0.4s
        Vrecpe(F64, V128, dest, src) => vgen2(code, 0x4ee1d800-0, dest, src, &i), //     1418:	4ee1d800 	frecpe	v0.2d, v0.2d
        Vrsqrte(F32, V32, dest, src) => vgen2(code, 0x7ea1d800-0, dest, src, &i), //     1420:	7ea1d800 	frsqrte	s0, s0
        Vrsqrte(F64, V64, dest, src) => vgen2(code, 0x7ee1d800-0, dest, src, &i), //     1428:	7ee1d800 	frsqrte	d0, d0
        Vrsqrte(F32, V64, dest, src) => vgen2(code, 0x2ea1d800-0, dest, src, &i), //     1430:	2ea1d800 	frsqrte	v0.2s, v0.2s
        Vrsqrte(F32, V128, dest, src) => vgen2(code, 0x6ea1d800-0, dest, src, &i), //     1438:	6ea1d800 	frsqrte	v0.4s, v0.4s
        Vrsqrte(F64, V128, dest, src) => vgen2(code, 0x6ee1d800-0, dest, src, &i), //     1440:	6ee1d800 	frsqrte	v0.2d, v0.2d
        _ => Err(Error::UnsupportedVectorOperation(i))
    }
}
